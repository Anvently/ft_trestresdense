
events {
	worker_connections 64;
}

error_log /dev/stdout info;

user root;

http {
	include /etc/nginx/mime.types;

	server {
		listen 80;
		server_name localhost;

		rewrite ^(.*) https://$server_name:8083$1 permanent;
	}

	server {

		listen	443 ssl;

		server_name localhost;

		ssl_certificate     /etc/certificate/ssl.crt;
        ssl_certificate_key /run/secrets/ssl-key;
		ssl_protocols		TLSv1.3;
		ssl_ciphers			HIGH:!aNULL:!MD5;

		access_log /var/log/nginx/access.log;
		error_log  /var/log/nginx/error.log;
		# access_log /dev/stdout;
		# error_log  /dev/stdout;

		root /www/html/;

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
			index home.html;
		}

		# location ^~ /static/ {
		# 	# include proxy_params;
		# 	# rewrite (.*) $1  break;
		# 	proxy_pass http://users_api:8001;
		# 	proxy_set_header Host $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto https;
		# }

		location /api {
			# include proxy_params;
			rewrite /api/(.*) /$1  break;
			proxy_pass http://users_api:8001;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
		}

		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}

		#regex capturing group ()
		# ~* case insensitive
		# $ the expression must be at the end of uri
		# location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		# 	expires max; #Configure cache header respons
		# 	log_not_found off;
		# }

		location = /robots.txt {
			allow all;
			log_not_found off;
			access_log off;
		}
	}
}
